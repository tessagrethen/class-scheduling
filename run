#!/bin/bash

## declare an array variable
# declare -a arr=("element1" "element2" "element3")


# You can access them using echo "${arr[0]}", "${arr[1]}" also


# classes, let’s do from 5 to 2000, make 20 cases? time Slots, from 5 to 100, make 10 cases. So that’s 200 cases — do you think you can write a script to do it? Doing it by hand would be painful


# a=2334                   # Integer.
# let "a += 1"
# echo "a = $a "           # a = 2335
# echo                     # Integer, still.
minS=5
maxS=2000

CLASSES=()

# for ((i = 0; i<5; i++)); do
#     # echo "Element $i"
#     CLASSES+=(5)
# done


for ((i = 100; i<=maxS; i+=(maxS/20))); do
    # echo "Element $i"
    CLASSES+=($i)
    CLASSES+=($i)
    CLASSES+=($i)
    CLASSES+=($i)
    CLASSES+=($i)
done


# echo "${CLASSES[@]}"
# echo "${#CLASSES[@]}"


minT=5
maxT=100

TIMES=()
for ((i = minT; i<=maxT; i+=(maxT/5))); do
    # echo "Element $i"
    # for ((i = 0; i<minT; i++)); do
    TIMES+=($i)
    # done 
done


# echo "${TIMES[@]}"
# echo "${#TIMES[@]}"



echo -n "" > listoftests.txt
# now loop through the above array
# x=0
# for ((i = 0; i<=${#CLASSES[@]}; i++)); do
#     echo -e "50 \t ${CLASSES[$i]} \t ${TIMES[$x]} \t 1000" >> listoftests.txt
#     perl basic/make_random_input.pl 50 $i $x 1000 basic/constraints.txt basic/pref.txt
#     python ClassScheduling.py

#     ((x++))
#     if [[ $(( $x % 5 )) == 0 ]]; then
#         x=0 
#     fi

#    # or do whatever with individual element of the array
# done

# for ((i = 0; i<=5; i++)); do
perl basic/make_random_input.pl 50 10 10 1000 basic/constraints.txt basic/pref.txt
python ClassScheduling.py
# done

